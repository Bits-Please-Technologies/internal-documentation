{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"project-setup/flutter-starter/","text":"","title":"Flutter starter"},{"location":"project-setup/next-starter/","text":"Next.js, Tailwind & Typescript Setup Guide. Using these command line tools requires eigher a unix based system or git bash on Windows. This starter guide will help you set up your nextjs project with typescript and tailwind. Installation Next Setup Create a new next project with the create-next-app script and yarn. while the /app folder is in beta. yarn create next-app my-project --ts --eslint --experimental-app after the /app folder is out of beta. yarn create next-app my-project --ts --eslint After you've created your next project make a src folder in the root of your project. mkdir src Then move the app,pages folders into the src folder. the -t, --target-directory=DIRECTORY flag for the mv command moves all SOURCE arguments into DIRECTORY mv -t src app pages After you've moved these folders to the src folder root of your project. Navigate into the directory and create these folders and add placeholder files. eg. hooks/hooks.placeholder We will remove the placeholder files when we start using the directories. src/ \u251c\u2500 config/ \u251c\u2500 hooks/ \u251c\u2500 interfaces/ \u251c\u2500 services/ \u251c\u2500 utils/ cd src mkdir config hooks interfaces services utils touch config/congig.placeholder hooks/hooks.placeholder interfaces/interfaces.placeholder services/services.placeholder utils/utils.placeholder Typescript Setup Tailwind Setup By the time you're reading this the documentation of this section may have been changed. click here to checkout the latest version. Start by adding the tailwind dependencies and initialize the tailwind configuration. npm install -D tailwindcss postcss autoprefixer npx tailwindcss init -p Add the paths to all of your template files in your tailwind.config.js file. /** @type {import('tailwindcss').Config} */ module . exports = { content : [ \"./app/**/*.{js,ts,jsx,tsx}\" , \"./pages/**/*.{js,ts,jsx,tsx}\" , \"./components/**/*.{js,ts,jsx,tsx}\" , ], theme : { extend : {}, }, plugins : [], }; Add the @tailwind directives for each of Tailwind\u2019s layers to your ./styles/globals.css file. @ tailwind base ; @ tailwind components ; @ tailwind utilities ; Start your build process. yarn run dev","title":"NextJS Starter"},{"location":"project-setup/next-starter/#nextjs-tailwind-typescript-setup-guide","text":"Using these command line tools requires eigher a unix based system or git bash on Windows. This starter guide will help you set up your nextjs project with typescript and tailwind.","title":"Next.js, Tailwind &amp; Typescript Setup Guide."},{"location":"project-setup/next-starter/#installation","text":"","title":"Installation"},{"location":"project-setup/next-starter/#next-setup","text":"Create a new next project with the create-next-app script and yarn. while the /app folder is in beta. yarn create next-app my-project --ts --eslint --experimental-app after the /app folder is out of beta. yarn create next-app my-project --ts --eslint After you've created your next project make a src folder in the root of your project. mkdir src Then move the app,pages folders into the src folder. the -t, --target-directory=DIRECTORY flag for the mv command moves all SOURCE arguments into DIRECTORY mv -t src app pages After you've moved these folders to the src folder root of your project. Navigate into the directory and create these folders and add placeholder files. eg. hooks/hooks.placeholder We will remove the placeholder files when we start using the directories. src/ \u251c\u2500 config/ \u251c\u2500 hooks/ \u251c\u2500 interfaces/ \u251c\u2500 services/ \u251c\u2500 utils/ cd src mkdir config hooks interfaces services utils touch config/congig.placeholder hooks/hooks.placeholder interfaces/interfaces.placeholder services/services.placeholder utils/utils.placeholder","title":"Next Setup"},{"location":"project-setup/next-starter/#typescript-setup","text":"","title":"Typescript Setup"},{"location":"project-setup/next-starter/#tailwind-setup","text":"By the time you're reading this the documentation of this section may have been changed. click here to checkout the latest version. Start by adding the tailwind dependencies and initialize the tailwind configuration. npm install -D tailwindcss postcss autoprefixer npx tailwindcss init -p Add the paths to all of your template files in your tailwind.config.js file. /** @type {import('tailwindcss').Config} */ module . exports = { content : [ \"./app/**/*.{js,ts,jsx,tsx}\" , \"./pages/**/*.{js,ts,jsx,tsx}\" , \"./components/**/*.{js,ts,jsx,tsx}\" , ], theme : { extend : {}, }, plugins : [], }; Add the @tailwind directives for each of Tailwind\u2019s layers to your ./styles/globals.css file. @ tailwind base ; @ tailwind components ; @ tailwind utilities ; Start your build process. yarn run dev","title":"Tailwind Setup"}]}